<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>My Schedule - <%= day %></title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
    <style>
      :root {
        --primary-blue: #003c6c;
        --secondary-blue: #0064b4;
        --accent-yellow: #ffc800;
        --light-yellow: #fff3cc;
        --text-dark: #1a1a1a;
        --text-light: #666666;
        --bg-light: #f8fafc;
        --border: #e2e8f0;
      }

      body {
        margin: 0;
        padding: 0;
        font-family: 'Inter', sans-serif;
        background-color: var(--bg-light);
        color: var(--text-dark);
      }

      .top-nav {
        background: linear-gradient(to right, var(--primary-blue), var(--secondary-blue));
        padding: 1rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      .top-nav a {
        color: white;
        text-decoration: none;
        margin-right: 2rem;
        font-weight: 500;
        transition: opacity 0.2s;
      }

      .top-nav a:hover {
        opacity: 0.8;
      }

      .date-display {
        color: white;
        font-weight: 500;
      }

      .main-content {
        max-width: 1400px;
        margin: 2rem auto;
        padding: 0 2rem;
      }

      h1 {
        color: var(--primary-blue);
        font-size: 2rem;
        margin-bottom: 1.5rem;
      }

      .day-form {
        margin-bottom: 2rem;
      }

      select {
        padding: 0.5rem 1rem;
        border: 2px solid var(--border);
        border-radius: 0.5rem;
        font-size: 1rem;
        margin-right: 1rem;
        background-color: white;
      }

      button {
        background-color: var(--accent-yellow);
        color: var(--primary-blue);
        border: none;
        padding: 0.5rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        cursor: pointer;
        transition: transform 0.2s;
      }

      button:hover {
        transform: translateY(-1px);
      }

      .split-container {
        display: grid;
        grid-template-columns: 350px 1fr;
        gap: 2rem;
      }

      .details-panel {
        background: white;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      }

      .details-panel h3 {
        color: var(--primary-blue);
        margin-top: 0;
      }

      details {
        margin-bottom: 1rem;
        border-radius: 0.5rem;
        background: var(--bg-light);
      }

      details summary {
        padding: 1rem;
        cursor: pointer;
        font-weight: 500;
        color: var(--primary-blue);
        border-radius: 0.5rem;
      }

      details[open] summary {
        border-bottom: 1px solid var(--border);
      }

      .room-link {
        color: var(--secondary-blue);
        text-decoration: none;
        display: block;
        padding: 0.75rem 1rem;
        transition: background-color 0.2s;
      }

      .room-link:hover {
        background-color: var(--light-yellow);
      }

      .calendar-wrapper {
        display: flex;
        gap: 1rem;
        background: white;
        padding: 1.5rem;
        border-radius: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      }

      .time-axis {
        position: relative;
        width: 80px;
        height: <%= calendarHeight + 20 %>px;
        border-right: 1px solid var(--border);
        padding-top: 10px;
      }

      .time-label {
        position: absolute;
        right: 1rem;
        font-size: 0.875rem;
        color: var(--text-light);
      }

      .calendar-container {
        position: relative;
        flex: 1;
        height: <%= calendarHeight + 20 %>px;
        background: var(--bg-light);
        border-radius: 0.5rem;
        padding-top: 10px;
        cursor: pointer;
      }

      .hour-line {
        position: absolute;
        left: 0;
        width: 100%;
        border-top: 1px dashed var(--border);
      }

      .booking {
        position: absolute;
        left: 1rem;
        right: 1rem;
        background: linear-gradient(135deg, var(--secondary-blue), var(--primary-blue));
        color: white;
        padding: 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
      }

      .booking:hover {
        transform: scale(1.02);
      }

      @media (max-width: 1024px) {
        .split-container {
          grid-template-columns: 1fr;
        }
        
        .calendar-wrapper {
          overflow-x: auto;
        }
      }
    </style>
  </head>
  <body>
    <div class="top-nav">
      <div>
        <a href="/home">Home</a>
        <a href="/schedule">Your Schedule</a>
        <a href="/pickaroom">Pick a Room</a>
        <a href="/map">Map</a>
      </div>
      <div class="date-display"><%= new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %></div>
    </div>

    <div class="main-content">
      <h1>My Schedule for <%= day %></h1>
      <form class="day-form" method="GET" action="/home">
        <select name="day">
          <option value="Monday"    <%= day==="Monday" ? "selected" : "" %>>Monday</option>
          <option value="Tuesday"   <%= day==="Tuesday" ? "selected" : "" %>>Tuesday</option>
          <option value="Wednesday" <%= day==="Wednesday" ? "selected" : "" %>>Wednesday</option>
          <option value="Thursday"  <%= day==="Thursday" ? "selected" : "" %>>Thursday</option>
          <option value="Friday"    <%= day==="Friday" ? "selected" : "" %>>Friday</option>
        </select>
        <button type="submit">Show Schedule</button>
      </form>

      <div class="split-container">
        <div class="left-panel">
          <div class="details-panel" id="detailsPanel">
            <h3>Free Rooms</h3>
            <p>Click on an empty spot in the calendar to see which rooms are free at that time.</p>
            <div id="freeRoomsList"></div>
          </div>
        </div>

        <div class="right-panel">
          <div class="calendar-wrapper">
            <div class="time-axis">
              <% for (let t = 420; t <= 1320; t += 60) {
                  let hour = Math.floor(t / 60);
                  let ampm = hour >= 12 ? "PM" : "AM";
                  let displayHour = (hour % 12) || 12;
                  let offset = (t - 420) * 0.5;
              %>
                <div class="time-label" style="top: <%= offset + 10 - 6 %>px;">
                  <%= displayHour + ":00" + ampm %>
                </div>
              <% } %>
            </div>

            <div class="calendar-container" id="calendarContainer">
              <% for (let t = 420; t <= 1320; t += 60) {
                  let offset = (t - 420) * 0.5;
              %>
                <div class="hour-line" style="top:<%= offset + 10 %>px;"></div>
              <% } %>
              <% bookings.forEach(function(b) { %>
                <div class="booking" style="top:<%= b.top + 10 %>px; height:<%= b.height %>px;" onclick="event.stopPropagation()">
                  <strong><%= b.className %></strong><br/>
                  <%= b.timeRange %>
                </div>
              <% }); %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      const groupKeywords = [
        "Cowell Acad",
        "Cowell Clrm",
        "Commun Bldg",
        "Crown Clrm",
        "Earth&Marine",
        "Elena Baskin Arts",
        "Engineer 2",
        "ISB",
        "J Baskin Engr",
        "Kresge Acad",
        "McHenry Clrm",
        "McHenry Lib",
        "Media Theater",
        "Merrill Acad",
        "Nat Sci",
        "Oakes Acad",
        "PhysSciences",
        "Porter Acad",
        "R Carson Acad",
        "Soc Sci",
        "Steven Acad",
        "Thim Lecture",
        "Thimann Lab"
      ];

      function groupRooms(rooms) {
        const groups = {};
        const others = [];
        rooms.forEach(room => {
          let matched = false;
          for (let keyword of groupKeywords) {
            if (room.startsWith(keyword)) {
              if (!groups[keyword]) groups[keyword] = [];
              groups[keyword].push(room);
              matched = true;
              break;
            }
          }
          if (!matched) {
            others.push(room);
          }
        });
        for (let group in groups) {
          groups[group].sort((a, b) => a.localeCompare(b));
        }
        others.sort((a, b) => a.localeCompare(b));
        return { groups, others };
      }

      const calendarContainer = document.getElementById("calendarContainer");
      const freeRoomsList = document.getElementById("freeRoomsList");
      const currentDay = "<%= day %>";

      calendarContainer.addEventListener("click", async function(e) {
        const rect = calendarContainer.getBoundingClientRect();
        const clickY = e.clientY - rect.top;
        const adjustedY = clickY - 10;
        const minutesFrom7AM = adjustedY / 0.5;
        const totalMinutes = Math.round(minutesFrom7AM);
        const hours = Math.floor(totalMinutes / 60) + 7;
        const mins = totalMinutes % 60;
        const period = (hours >= 12) ? "PM" : "AM";
        const displayHour = hours % 12 || 12;
        const displayMins = mins.toString().padStart(2, "0");
        const timeStr = displayHour + ":" + displayMins + period;

        try {
          const response = await fetch(`/home/freerooms?day=${currentDay}&time=${encodeURIComponent(timeStr)}`);
          const rooms = await response.json();
          const { groups, others } = groupRooms(rooms);
          let html = `<p>Selected time: <strong>${timeStr}</strong> on <strong>${currentDay}</strong></p><p>Available Rooms:</p>`;

          for (let group in groups) {
            html += `<details><summary>${group} (${groups[group].length})</summary><ul style="list-style: none; padding: 0; margin: 0;">`;
            groups[group].forEach(r => {
              const link = `/pickaroom?day=${encodeURIComponent(currentDay)}&location=${encodeURIComponent(r)}`;
              html += `<li><a class="room-link" href="${link}">${r}</a></li>`;
            });
            html += `</ul></details>`;
          }
          if (others.length > 0) {
            html += `<details open><summary>Others (${others.length})</summary><ul style="list-style: none; padding: 0; margin: 0;">`;
            others.forEach(r => {
              const link = `/pickaroom?day=${encodeURIComponent(currentDay)}&location=${encodeURIComponent(r)}`;
              html += `<li><a class="room-link" href="${link}">${r}</a></li>`;
            });
            html += `</ul></details>`;
          }
          freeRoomsList.innerHTML = html;
        } catch (err) {
          freeRoomsList.innerHTML = `<p>Error fetching free rooms: ${err.message}</p>`;
        }
      });
    </script>
  </body>
</html>